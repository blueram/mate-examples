<?xml version="1.0" encoding="utf-8"?>
<s:Group 
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:views="com.cafetownsend.ui.views.*"
	xmlns:mate="http://mate.asfusion.com/"
	currentState="{ model.currentState }"
	width="455" height="{ HEIGHT_MIN }"
	>
	
	<fx:Script>
		<![CDATA[
			import com.cafetownsend.model.constants.EffectConstants;
			import com.cafetownsend.ui.presenters.MainUIPresentationModel;
			
			import mx.graphics.SolidColor;
			
			protected static const PADDING:int = 15;
			protected static const HEIGHT_MIN:int = 420;
			protected static const HEIGHT_MAX:int = 520;
			
			[Bindable]
			public var model:MainUIPresentationModel;
			
		]]>
	</fx:Script>
	
	
	
	<!-- States ______________________________________________________________________ -->
	
	<s:states>
		<s:State name="login" /> 			<!-- Navigation.LOGIN  -->
		<s:State name="loggedIn" /> 		<!-- Navigation.LOGGED_IN  -->
	</s:states>
	
	<!-- Transitions ______________________________________________________________________ -->
	
	<s:transitions>
		<s:Transition 
			autoReverse="true"
			fromState="*" toState="login"		
			>
			<s:Fade
				duration="{ EffectConstants.DURATION }"
				startDelay="{ EffectConstants.DURATION }"
				target="{ loginView }"
				/>
		</s:Transition>
		
		<s:Transition 
			autoReverse="true"
			fromState="login" toState="loggedIn"		
			>
			
			<s:Sequence
				>				
				<mx:SetPropertyAction
					target="{ employeesView }"
					name="visible"
					value="false"
					/>
				<s:Resize 
					target="{ this }"
					startDelay="200"
					heightTo="{ HEIGHT_MAX }"
					duration="{ EffectConstants.DURATION }"
					easer="{ EffectConstants.EASE }"
					/>
				<s:Parallel>
					<s:Move
						target="{ bLogout }"
						duration="{ EffectConstants.DURATION }"
						easer="{ EffectConstants.EASE }"
						/>					
					<s:Fade
						duration="{ EffectConstants.DURATION }"
						effectStart="employeesView.visible = true"
						target="{ employeesView }"
						/>
				</s:Parallel>
			</s:Sequence>
			
			
		</s:Transition>
		<s:Transition 
			autoReverse="true"
			fromState="loggedIn" toState="login"
			>
			<s:Sequence
				>
				<s:Parallel>
					<mx:SetPropertyAction
						target="{ loginView }"
						name="visible"
						value="false"
						/>
					<s:Fade
						duration="{ EffectConstants.DURATION }"
						target="{ employeesView }"
						/>
					<s:Move
						target="{ bLogout }"
						duration="{ EffectConstants.DURATION }"
						easer="{ EffectConstants.EASE }"
						/>	
				</s:Parallel>
				<s:Resize
					target="{ this }"
					heightTo="{ HEIGHT_MIN }"
					duration="{ EffectConstants.DURATION }"
					easer="{ EffectConstants.EASE }"
					/>
				<s:Fade
					duration="{ EffectConstants.DURATION }"
					effectStart="loginView.visible = true"
					target="{ loginView }"
					/>
			</s:Sequence>
		</s:Transition>
	</s:transitions>
	
	
	<!-- logout button ______________________________________________________________________ -->
	
	<s:Button
		id="bLogout"
		styleName="mainButton"
		label="logout"
		right="{ PADDING + 2 }"
		width="120" height="45"
		y.login="60"
		y.loggedIn="3"
		click="model.logout()"
		/>
	
	
	<!-- ContentContainter ______________________________________________________________________ -->
	
	<s:BorderContainer 
		id="contentContainer"
		top="40" bottom="{ PADDING }"
		left="{ PADDING }" right="{ PADDING }"
		backgroundColor="0xFFFFFF"
		>
		
		<s:borderStroke>
			<s:SolidColorStroke
				weight="10"
				color="#654030"
				caps="square"
				joints="miter"
				/>
		</s:borderStroke>
		
		<s:filters>
			<s:DropShadowFilter 
				alpha="0.55" 
				angle="45" 
				color="#000000" 
				distance="0" 
				quality="20"
				/>
			
		</s:filters>
		
		
		<!-- ViewContainter ______________________________________________________________________ -->
		
		<s:Group 
			id="viewContainer"
			width="100%"
			top="125" bottom="10"
			>
			
			<views:Login 
				id="loginView"
				includeIn="login"
				width="100%" height="100%"
				/>
			
			<views:Employees
				id="employeesView"
				includeIn="loggedIn"
				width="100%" height="100%"
				/>	
			
		</s:Group>
		
		<!-- Header (on top) ______________________________________________________________________ -->
		
		<s:BitmapImage 
			source="@Embed('assets/images/header.png')"
			width="405" height="128"
			>
			<s:filters>
				<s:DropShadowFilter 
					id="shadow"
					alpha="0.40" 
					angle="90" 
					color="0" 
					distance="3" 
					quality="50"
					/>
			</s:filters>
		</s:BitmapImage>
		
	</s:BorderContainer>
	
</s:Group>


